{
  "hash": "54594e0850d3b0b3a0088e7c493964f9",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Homework 7\"\nauthor: Jinii\ndate: '2024-09-02'\ncategories: [bigdata]\njupyter: python3\n---\n\n\n## ADP 표본점수\n2022년에 실시 된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를 따른다고 한다.\n\n# 1. ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요.\n\n::: {#c82a4896 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n\nx=np.arange(15, 45, 0.1)\ny=norm.pdf(x, loc=30, scale=5)\nplt.plot(x, y)\n```\n\n::: {.cell-output .cell-output-display}\n![](hw7_files/figure-html/cell-2-output-1.png){width=579 height=411}\n:::\n:::\n\n\n# 2. ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을때 45점 보다 높은 점수를 받았을 확률을 구하세요.\n\n::: {#0e89b0c6 .cell execution_count=2}\n``` {.python .cell-code}\n1-norm.cdf(45, loc=30, scale=5)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nnp.float64(0.0013498980316301035)\n```\n:::\n:::\n\n\n# 3. 슬통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.\n\n::: {#b2bf78df .cell execution_count=3}\n``` {.python .cell-code}\nnorm.ppf(0.9, loc=30, scale=5)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nnp.float64(36.407757827723)\n```\n:::\n:::\n\n\n# 4. 슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요.\n\n::: {#8c884dde .cell execution_count=4}\n``` {.python .cell-code}\n# 기존 그래프\nx=np.arange(15, 45, 0.1)\ny=norm.pdf(x, loc=30, scale=5)\nplt.plot(x, y)\n\n# 새로운 그래프\ny2=norm.pdf(x, loc=30, scale=5/np.sqrt(16))\nplt.plot(x, y2, color='red')\n```\n\n::: {.cell-output .cell-output-display}\n![](hw7_files/figure-html/cell-5-output-1.png){width=579 height=411}\n:::\n:::\n\n\n# 5. 슬기로운 통계생활 ADP 반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게 나올 확률을 구하세요.\n\n::: {#b30e35a4 .cell execution_count=5}\n``` {.python .cell-code}\n1-norm.cdf(38, loc=30, scale=5/np.sqrt(16))\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nnp.float64(7.76885222819601e-11)\n```\n:::\n:::\n\n\n## 카이제곱분포와 표본분산\n자유도가 𝑘인 카이제곱분포를 따르는 확률변수 𝑋 를 𝑋 ∼ 𝜒2(𝑘)과 같이 나타내고,\n이 확률변수의 확률밀도함수는 다음과 같습니다.\n𝑓𝑋(𝑥; 𝑘) = 1/((2𝑘/2Γ(𝑘/2))**𝑥𝑘/2−1𝑒−𝑥/2)\n다음의 물음에 답하세요.\n\n# 1. 자유도가 4인 카이제곱분포의 확률밀도함수를 그려보세요.\n\n::: {#b1130bd5 .cell execution_count=6}\n``` {.python .cell-code}\nfrom scipy.stats import chi2, norm\nx=np.linspace(0, 20, 1000)\npdf=chi2.pdf(x, 4)\nplt.plot(x, pdf)\n```\n\n::: {.cell-output .cell-output-display}\n![](hw7_files/figure-html/cell-7-output-1.png){width=587 height=411}\n:::\n:::\n\n\n# 2. 다음의 확률을 구해보세요. 𝑃 (3 ≤ 𝑋 ≤ 5)\n\n::: {#9051f703 .cell execution_count=7}\n``` {.python .cell-code}\nchi2.cdf(5, 4) - chi2.cdf(3, 4)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nnp.float64(0.27052790518742903)\n```\n:::\n:::\n\n\n# 3. 자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요.\n\n::: {#97a02607 .cell execution_count=8}\n``` {.python .cell-code}\nnp.random.seed(20240902)\ndata=chi2.rvs(4, size=1000)\nplt.hist(data, bins=50, density=True, color='black', edgecolor='blue')\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n(array([0.07622145, 0.08751351, 0.13268177, 0.14961987, 0.2230183 ,\n        0.14679686, 0.18067306, 0.19478814, 0.16091194, 0.14961987,\n        0.11574368, 0.15244289, 0.14961987, 0.12703574, 0.09598256,\n        0.05363731, 0.07339843, 0.06492938, 0.04234525, 0.07904446,\n        0.03952223, 0.04234525, 0.02540715, 0.03105318, 0.02540715,\n        0.03105318, 0.02540715, 0.01411508, 0.0169381 , 0.01129207,\n        0.00282302, 0.00564603, 0.01976112, 0.01411508, 0.01129207,\n        0.00564603, 0.        , 0.00846905, 0.00282302, 0.00846905,\n        0.00564603, 0.00564603, 0.00564603, 0.        , 0.00282302,\n        0.00282302, 0.        , 0.        , 0.        , 0.00282302]),\n array([ 0.06952138,  0.42375239,  0.77798341,  1.13221443,  1.48644544,\n         1.84067646,  2.19490748,  2.54913849,  2.90336951,  3.25760053,\n         3.61183154,  3.96606256,  4.32029358,  4.67452459,  5.02875561,\n         5.38298663,  5.73721764,  6.09144866,  6.44567968,  6.79991069,\n         7.15414171,  7.50837273,  7.86260374,  8.21683476,  8.57106578,\n         8.92529679,  9.27952781,  9.63375883,  9.98798984, 10.34222086,\n        10.69645188, 11.05068289, 11.40491391, 11.75914493, 12.11337594,\n        12.46760696, 12.82183798, 13.17606899, 13.53030001, 13.88453103,\n        14.23876204, 14.59299306, 14.94722408, 15.30145509, 15.65568611,\n        16.00991713, 16.36414814, 16.71837916, 17.07261018, 17.42684119,\n        17.78107221]),\n <BarContainer object of 50 artists>)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](hw7_files/figure-html/cell-9-output-2.png){width=579 height=411}\n:::\n:::\n\n\n# 4. 자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.\n\n::: {#5d268db9 .cell execution_count=9}\n``` {.python .cell-code}\nchi2.ppf(0.95, 4)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nnp.float64(9.487729036781154)\n```\n:::\n:::\n\n\n# 5. 3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?\n\n::: {#eee1fd95 .cell execution_count=10}\n``` {.python .cell-code}\nnp.percentile(data, 95)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\nnp.float64(9.853854661290491)\n```\n:::\n:::\n\n\n# 6. 평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, 𝑥1, ..., 𝑥20,을 뽑은 후 표본분산을 계산한 것을 𝑠21이라 생각해보죠. 다음을 수행해보세요!\n• 같은 방법으로 500개의 𝑠2 들, 𝑠21\n, 𝑠22\n, ..., 𝑠2\n500 발생시킵니다.\n• 발생한 500개의 𝑠2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램\n을 그릴 때 probability = TRUE 옵션을 사용해서 그릴 것)\n• 위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.\n\n::: {#63814a9f .cell execution_count=11}\n``` {.python .cell-code}\nnp.random.seed(20240902)\nvar_samples=[]\n\nfor i in range (500):\n    x=norm.rvs(loc=3, scale=2, size=20)\n    var_samples.append(np.var(x, ddof=1))\n\nscaled_var_samples=np.array(var_samples)\n\nplt.hist(scaled_var_samples, bins=50, density=True, color='lightblue',\n        edgecolor='black')\n\nx = np.linspace(0, max(scaled_var_samples), 1000)\npdf_chi19=chi2.pdf(x, df=19)\n\nplt.plot(x, pdf_chi19, 'r--', linewidth=2);\nplt.legend(['histogram', 'df 19 chisquare dist'], loc='upper right');\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](hw7_files/figure-html/cell-12-output-1.png){width=571 height=411}\n:::\n:::\n\n\n",
    "supporting": [
      "hw7_files"
    ],
    "filters": [],
    "includes": {}
  }
}