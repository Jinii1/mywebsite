[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jinni",
    "section": "",
    "text": "안녕하세요 Jinii입니다"
  },
  {
    "objectID": "index.html#홈페이지-첫-화면입니다",
    "href": "index.html#홈페이지-첫-화면입니다",
    "title": "Jinni",
    "section": "",
    "text": "안녕하세요 Jinii입니다"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\n# 1번\ndf = pd.DataFrame({'제품': ['사과', '딸기', '수박'],\n'가격': [1800, 1500, 3000],\n'판매량': [24, 38, 13]})\ndf\n\n# 2번\nsum(df['가격'])/len(df['가격'])\nsum(df['판매량'])/len(df['판매량'])\n\n25.0"
  },
  {
    "objectID": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({'제품': ['사과', '딸기', '수박'],\n'가격': [1800, 1500, 3000],\n'판매량': [24, 38, 13]})\ndf\n\nsum(df['가격'])/len(df['가격'])\nsum(df['판매량'])/len(df['판매량'])\n\n25.0"
  },
  {
    "objectID": "hw1.html#mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "href": "hw1.html#mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "title": "hw1",
    "section": "mpg 데이터를 이용해 분석 문제를 해결해 보세요.",
    "text": "mpg 데이터를 이용해 분석 문제를 해결해 보세요.\n\nmpg = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/mpg.csv')\nmpg_new = mpg.copy()\nmpg_new\n\nmpg_new = mpg_new.rename(columns = {'cty' : 'city'})\nmpg_new = mpg_new.rename(columns = {'hwy' : 'highway'})\nmpg_new.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#p.-84-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#p.-84-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\n# 1번\ndf = pd.DataFrame({'제품': ['사과', '딸기', '수박'],\n'가격': [1800, 1500, 3000],\n'판매량': [24, 38, 13]})\ndf\n\n# 2번\nsum(df['가격'])/len(df['가격'])\nsum(df['판매량'])/len(df['판매량'])\n\n25.0"
  },
  {
    "objectID": "hw1.html#p.-105-mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "href": "hw1.html#p.-105-mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "title": "hw1",
    "section": "p. 105 mpg 데이터를 이용해 분석 문제를 해결해 보세요.",
    "text": "p. 105 mpg 데이터를 이용해 분석 문제를 해결해 보세요.\n\nmpg = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/mpg.csv')\n\n# 1번\nmpg_new = mpg.copy()\nmpg_new\n\n# 2번\nmpg_new = mpg_new.rename(columns = {'cty' : 'city'})\nmpg_new = mpg_new.rename(columns = {'hwy' : 'highway'})\n\n# 3번\nmpg_new.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#p.-130-midwest.csv를-이용해-데이터-분석-문제를-해결해-보세요.",
    "href": "hw1.html#p.-130-midwest.csv를-이용해-데이터-분석-문제를-해결해-보세요.",
    "title": "hw1",
    "section": "p. 130 midwest.csv를 이용해 데이터 분석 문제를 해결해 보세요.",
    "text": "p. 130 midwest.csv를 이용해 데이터 분석 문제를 해결해 보세요.\n\n# 1번\nmidwest = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/midwest.csv')\nmidwest.head()\nmidwest.tail()\nmidwest.shape\nmidwest.info()\nmidwest.describe()\n\n# 2번\nmidwest = midwest.rename(columns = {'poptotal' : 'total'})\nmidwest = midwest.rename(columns = {'popasian' : 'asian'})\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# 3번\nmidwest['전체 인구 대비 아시아 인구 백분율'] = midwest['asian'] / midwest['total'] *100\nmidwest['전체 인구 대비 아시아 인구 백분율'].plot.hist()\nplt.show()\n\n# 4번\nmidwest['a'] = np.where (midwest['전체 인구 대비 아시아 인구 백분율'] &gt; 0.4872, 'large', 'small')\nmidwest['a']\n\n# 5번\nmidwest['a'].value_counts()\ncount_a = midwest['a'].value_counts()\ncount_a.plot.bar(rot=0)\nplt.clf()\nplt.show()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jinni",
    "section": "Education",
    "text": "Education\nUniversity of Dankook | Department of Economics | Mar 2020 -"
  },
  {
    "objectID": "hw2.html#q1",
    "href": "hw2.html#q1",
    "title": "hw2",
    "section": "Q1",
    "text": "Q1\n\nimport pandas as pd\nimport numpy as np\nmpg = pd.read_csv('mpg.csv')\nmpg\n\nmpg_d4 = mpg.query('displ &lt;= 4')\nmpg_d5 = mpg.query('displ &gt;= 5')\n\nmpg_d4['hwy'].mean()\nmpg_d5['hwy'].mean()\n\nnp.float64(18.07894736842105)"
  },
  {
    "objectID": "hw2.html#q2",
    "href": "hw2.html#q2",
    "title": "hw2",
    "section": "Q2",
    "text": "Q2\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\nmpg_toyota = mpg.query('manufacturer == \"toyota\"')\n\nmpg_audi['cty'].mean()\nmpg_toyota['cty'].mean()\n\nnp.float64(18.529411764705884)"
  },
  {
    "objectID": "hw2.html#q3",
    "href": "hw2.html#q3",
    "title": "hw2",
    "section": "Q3",
    "text": "Q3\n\nmpg.query('manufacturer in [\"chevrolet\", \"ford\", \"honda\"]')['hwy'].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "hw2.html#p.-153",
    "href": "hw2.html#p.-153",
    "title": "hw2",
    "section": "p. 153",
    "text": "p. 153"
  },
  {
    "objectID": "hw2.html#q1-1",
    "href": "hw2.html#q1-1",
    "title": "hw2",
    "section": "Q1",
    "text": "Q1\n\nmpg.query('manufacturer == \"audi\"').sort_values(['hwy'], ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "hw2.html#p.-158",
    "href": "hw2.html#p.-158",
    "title": "hw2",
    "section": "p. 158",
    "text": "p. 158"
  },
  {
    "objectID": "hw2.html#q1-2",
    "href": "hw2.html#q1-2",
    "title": "hw2",
    "section": "Q1",
    "text": "Q1\n\nmpg_new = mpg.copy()\nmpg_new = mpg_new.assign(total = mpg_new['cty'] + mpg_new['hwy'])"
  },
  {
    "objectID": "hw2.html#q2-1",
    "href": "hw2.html#q2-1",
    "title": "hw2",
    "section": "Q2",
    "text": "Q2\n\nmpg_new = mpg_new.assign(mean = mpg_new['total'] / 2)"
  },
  {
    "objectID": "hw2.html#q3-1",
    "href": "hw2.html#q3-1",
    "title": "hw2",
    "section": "Q3",
    "text": "Q3\n\nmpg_new.sort_values('mean', ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "hw2.html#q4",
    "href": "hw2.html#q4",
    "title": "hw2",
    "section": "Q4",
    "text": "Q4\n\nmpg.assign(total = lambda x: x['cty'] + x['hwy'],\n           mean = lambda x: x['total'] / 2) \\\n   .sort_values('mean', ascending = False)\\\n   .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/test/index.html",
    "href": "posts/test/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "myblog",
    "section": "",
    "text": "project1 - 기역조\n\n\n\n\n\n\nproject\n\n\n\n\n\n\n\n\n\nJul 24, 2024\n\n\n강남규, 권효은, 김연예진, 김연진\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 Homework 3\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\nJinii\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJul 17, 2024\n\n\nJinii\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 Homework 2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 16, 2024\n\n\nJinii\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 Homework 1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\nJinii\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\n# 1번\ndf = pd.DataFrame({'제품': ['사과', '딸기', '수박'],\n'가격': [1800, 1500, 3000],\n'판매량': [24, 38, 13]})\ndf\n\n# 2번\nsum(df['가격'])/len(df['가격'])\nsum(df['판매량'])/len(df['판매량'])\n\n25.0"
  },
  {
    "objectID": "posts/hw1/index.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "posts/hw1/index.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({\n    \"col1\": [1, 2, 3]\n})\ndf\n\n\n\n\n\n\n\n\ncol1\n\n\n\n\n0\n1\n\n\n1\n2\n\n\n2\n3"
  },
  {
    "objectID": "posts/hw1/index.html#p.-84-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "posts/hw1/index.html#p.-84-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\n# 1번\ndf = pd.DataFrame({'제품': ['사과', '딸기', '수박'],\n'가격': [1800, 1500, 3000],\n'판매량': [24, 38, 13]})\ndf\n\n# 2번\nsum(df['가격'])/len(df['가격'])\nsum(df['판매량'])/len(df['판매량'])\n\n25.0"
  },
  {
    "objectID": "posts/hw1/index.html#p.-105-mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "href": "posts/hw1/index.html#p.-105-mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "p. 105 mpg 데이터를 이용해 분석 문제를 해결해 보세요.",
    "text": "p. 105 mpg 데이터를 이용해 분석 문제를 해결해 보세요."
  },
  {
    "objectID": "posts/hw1/index.html#p.-130-midwest.csv를-이용해-데이터-분석-문제를-해결해-보세요.",
    "href": "posts/hw1/index.html#p.-130-midwest.csv를-이용해-데이터-분석-문제를-해결해-보세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "p. 130 midwest.csv를 이용해 데이터 분석 문제를 해결해 보세요.",
    "text": "p. 130 midwest.csv를 이용해 데이터 분석 문제를 해결해 보세요."
  },
  {
    "objectID": "posts/hw2/index.html#q1",
    "href": "posts/hw2/index.html#q1",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q1",
    "text": "Q1\n\nimport pandas as pd\nimport numpy as np\nmpg = pd.read_csv('mpg.csv')\nmpg\n\nmpg_d4 = mpg.query('displ &lt;= 4')\nmpg_d5 = mpg.query('displ &gt;= 5')\n\nmpg_d4['hwy'].mean()\nmpg_d5['hwy'].mean()\n\nnp.float64(18.07894736842105)"
  },
  {
    "objectID": "posts/hw2/index.html#q2",
    "href": "posts/hw2/index.html#q2",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q2",
    "text": "Q2\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\nmpg_toyota = mpg.query('manufacturer == \"toyota\"')\n\nmpg_audi['cty'].mean()\nmpg_toyota['cty'].mean()\n\nnp.float64(18.529411764705884)"
  },
  {
    "objectID": "posts/hw2/index.html#q3",
    "href": "posts/hw2/index.html#q3",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q3",
    "text": "Q3\n\nmpg.query('manufacturer in [\"chevrolet\", \"ford\", \"honda\"]')['hwy'].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "posts/hw2/index.html#p.-153",
    "href": "posts/hw2/index.html#p.-153",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "p. 153",
    "text": "p. 153"
  },
  {
    "objectID": "posts/hw2/index.html#q1-1",
    "href": "posts/hw2/index.html#q1-1",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q1",
    "text": "Q1\n\nmpg.query('manufacturer == \"audi\"').sort_values(['hwy'], ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "posts/hw2/index.html#p.-158",
    "href": "posts/hw2/index.html#p.-158",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "p. 158",
    "text": "p. 158"
  },
  {
    "objectID": "posts/hw2/index.html#q1-2",
    "href": "posts/hw2/index.html#q1-2",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q1",
    "text": "Q1\n\nmpg_new = mpg.copy()\nmpg_new = mpg_new.assign(total = mpg_new['cty'] + mpg_new['hwy'])"
  },
  {
    "objectID": "posts/hw2/index.html#q2-1",
    "href": "posts/hw2/index.html#q2-1",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q2",
    "text": "Q2\n\nmpg_new = mpg_new.assign(mean = mpg_new['total'] / 2)"
  },
  {
    "objectID": "posts/hw2/index.html#q3-1",
    "href": "posts/hw2/index.html#q3-1",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q3",
    "text": "Q3\n\nmpg_new.sort_values('mean', ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw2/index.html#q4",
    "href": "posts/hw2/index.html#q4",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q4",
    "text": "Q4\n\nmpg.assign(total = lambda x: x['cty'] + x['hwy'],\n           mean = lambda x: x['total'] / 2) \\\n   .sort_values('mean', ascending = False)\\\n   .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw1/index.html#번",
    "href": "posts/hw1/index.html#번",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "1번",
    "text": "1번\n\nimport pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame({'제품': ['사과', '딸기', '수박'],\n'가격': [1800, 1500, 3000],\n'판매량': [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/index.html#번-1",
    "href": "posts/hw1/index.html#번-1",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "2번",
    "text": "2번\n\nsum(df['가격'])/len(df['가격'])\nsum(df['판매량'])/len(df['판매량'])\n\n25.0"
  },
  {
    "objectID": "posts/hw1/index.html#q1",
    "href": "posts/hw1/index.html#q1",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q1",
    "text": "Q1\n\nimport pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame({'제품': ['사과', '딸기', '수박'],\n'가격': [1800, 1500, 3000],\n'판매량': [24, 38, 13]})\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/index.html#q2",
    "href": "posts/hw1/index.html#q2",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q2",
    "text": "Q2\n\nsum(df['가격'])/len(df['가격'])\nsum(df['판매량'])/len(df['판매량'])\n\n25.0"
  },
  {
    "objectID": "posts/hw1/index.html#q1-1",
    "href": "posts/hw1/index.html#q1-1",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q1",
    "text": "Q1\n\nmpg = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/mpg.csv')\nmpg_new = mpg.copy()\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/index.html#q2-1",
    "href": "posts/hw1/index.html#q2-1",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q2",
    "text": "Q2\n\nmpg_new = mpg_new.rename(columns = {'cty' : 'city'})\nmpg_new = mpg_new.rename(columns = {'hwy' : 'highway'})"
  },
  {
    "objectID": "posts/hw1/index.html#q3",
    "href": "posts/hw1/index.html#q3",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q3",
    "text": "Q3\n\nmpg_new.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\nclass\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "posts/hw1/index.html#q1-2",
    "href": "posts/hw1/index.html#q1-2",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q1",
    "text": "Q1\n\nmidwest = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/midwest.csv')\nmidwest.head()\nmidwest.tail()\nmidwest.shape\nmidwest.info()\nmidwest.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns"
  },
  {
    "objectID": "posts/hw1/index.html#q2-2",
    "href": "posts/hw1/index.html#q2-2",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q2",
    "text": "Q2\n\nmidwest = midwest.rename(columns = {'poptotal' : 'total'})\nmidwest = midwest.rename(columns = {'popasian' : 'asian'})\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "posts/hw1/index.html#q3-1",
    "href": "posts/hw1/index.html#q3-1",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q3",
    "text": "Q3\n\nmidwest['전체 인구 대비 아시아 인구 백분율'] = midwest['asian'] / midwest['total'] *100\nmidwest['전체 인구 대비 아시아 인구 백분율'].plot.hist()\nplt.show()"
  },
  {
    "objectID": "posts/hw1/index.html#q4",
    "href": "posts/hw1/index.html#q4",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q4",
    "text": "Q4\n\nmidwest['a'] = np.where (midwest['전체 인구 대비 아시아 인구 백분율'] &gt; 0.4872, 'large', 'small')\nmidwest['a']\n\n0      small\n1      small\n2      small\n3      small\n4      small\n       ...  \n432    large\n433    small\n434    small\n435    large\n436    large\nName: a, Length: 437, dtype: object"
  },
  {
    "objectID": "posts/hw1/index.html#q5",
    "href": "posts/hw1/index.html#q5",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q5",
    "text": "Q5\n\nmidwest['a'].value_counts()\ncount_a = midwest['a'].value_counts()\ncount_a.plot.bar(rot=0)\nplt.clf()\nplt.show()\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "docs/posts/hw3/index.html#데이터-전처리하기",
    "href": "docs/posts/hw3/index.html#데이터-전처리하기",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "데이터 전처리하기",
    "text": "데이터 전처리하기\n\nimport pandas as pd\nmpg = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/mpg.csv')\nmpg\nmpg.shape\nimport seaborn as sns\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "docs/posts/hw3/index.html#산점도-그리기",
    "href": "docs/posts/hw3/index.html#산점도-그리기",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "산점도 그리기",
    "text": "산점도 그리기\n\nsns.scatterplot(data = mpg, x = 'displ', y = 'hwy',\n                            hue = 'drv') \\\n   .set(xlim = [3, 6], ylim = [10, 30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n##barplot 이용하여 그래프 만들기\n\ndf_mpg = mpg.groupby('drv', as_index = False) \\\n    .agg(mean_hwy=('hwy', 'mean')) # as_index = False -&gt; drv가 컬럼이 돼서 나온다\nsns.barplot(data = df_mpg.sort_values('mean_hwy'),\n            x = 'drv', y = 'mean_hwy',\n            hue = 'drv')\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "docs/posts/hw3/index.html#데이터-전처리하기-1",
    "href": "docs/posts/hw3/index.html#데이터-전처리하기-1",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "데이터 전처리하기",
    "text": "데이터 전처리하기\n\ndf_mpg = mpg.groupby('drv', as_index = False) \\\n            .agg(n = ('drv', 'count'))\ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nn\n\n\n\n\n0\n4\n103\n\n\n1\nf\n106\n\n\n2\nr\n25"
  },
  {
    "objectID": "docs/posts/hw3/index.html#barplot-사용해서-그래프-그리기",
    "href": "docs/posts/hw3/index.html#barplot-사용해서-그래프-그리기",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "barplot 사용해서 그래프 그리기",
    "text": "barplot 사용해서 그래프 그리기\n\nplt.clf()\nsns.barplot(data = df_mpg, x = 'drv', y = 'n', hue = 'drv')\nplt.show()"
  },
  {
    "objectID": "docs/posts/hw3/index.html#countplot-이용해서-그래프-그리기",
    "href": "docs/posts/hw3/index.html#countplot-이용해서-그래프-그리기",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "countplot 이용해서 그래프 그리기",
    "text": "countplot 이용해서 그래프 그리기\n\nplt.clf()\nsns.countplot(data = mpg, x = 'drv', hue = 'drv')\nplt.show()"
  },
  {
    "objectID": "docs/posts/hw3/index.html#plotly를-사용한-산점도",
    "href": "docs/posts/hw3/index.html#plotly를-사용한-산점도",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "plotly를 사용한 산점도",
    "text": "plotly를 사용한 산점도\n\nmpg\nmpg.info()\nimport plotly.express as px\npx.scatter(data_frame = mpg, x = 'cty', y = 'hwy', color = 'drv')\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 234 entries, 0 to 233\nData columns (total 11 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   manufacturer  234 non-null    object \n 1   model         234 non-null    object \n 2   displ         234 non-null    float64\n 3   year          234 non-null    int64  \n 4   cyl           234 non-null    int64  \n 5   trans         234 non-null    object \n 6   drv           234 non-null    object \n 7   cty           234 non-null    int64  \n 8   hwy           234 non-null    int64  \n 9   fl            234 non-null    object \n 10  class         234 non-null    object \ndtypes: float64(1), int64(4), object(6)\nmemory usage: 20.2+ KB\n\n\n                                                \n\n\n\ndf = mpg.groupby('class', as_index = False) \\\n        .agg(n = ('class', 'count'))\ndf\n\npx.bar(data_frame = df, x = 'class', y = 'n', color = 'class')"
  },
  {
    "objectID": "docs/0722.html#데이터-전처리하기",
    "href": "docs/0722.html#데이터-전처리하기",
    "title": "0722",
    "section": "데이터 전처리하기",
    "text": "데이터 전처리하기\n\nimport pandas as pd\nmpg = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/mpg.csv')\nmpg\nmpg.shape\nimport seaborn as sns\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "docs/0722.html#산점도-그리기",
    "href": "docs/0722.html#산점도-그리기",
    "title": "0722",
    "section": "산점도 그리기",
    "text": "산점도 그리기\n\nsns.scatterplot(data = mpg, x = 'displ', y = 'hwy',\n                            hue = 'drv') \\\n   .set(xlim = [3, 6], ylim = [10, 30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n##barplot 이용하여 그래프 만들기\n\ndf_mpg = mpg.groupby('drv', as_index = False) \\\n    .agg(mean_hwy=('hwy', 'mean')) # as_index = False -&gt; drv가 컬럼이 돼서 나온다\nsns.barplot(data = df_mpg.sort_values('mean_hwy'),\n            x = 'drv', y = 'mean_hwy',\n            hue = 'drv')\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "docs/0722.html#데이터-전처리하기-1",
    "href": "docs/0722.html#데이터-전처리하기-1",
    "title": "0722",
    "section": "데이터 전처리하기",
    "text": "데이터 전처리하기\n\ndf_mpg = mpg.groupby('drv', as_index = False) \\\n            .agg(n = ('drv', 'count'))\ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nn\n\n\n\n\n0\n4\n103\n\n\n1\nf\n106\n\n\n2\nr\n25"
  },
  {
    "objectID": "docs/0722.html#barplot-사용해서-그래프-그리기",
    "href": "docs/0722.html#barplot-사용해서-그래프-그리기",
    "title": "0722",
    "section": "barplot 사용해서 그래프 그리기",
    "text": "barplot 사용해서 그래프 그리기\n\nplt.clf()\nsns.barplot(data = df_mpg, x = 'drv', y = 'n', hue = 'drv')\nplt.show()"
  },
  {
    "objectID": "docs/0722.html#countplot-이용해서-그래프-그리기",
    "href": "docs/0722.html#countplot-이용해서-그래프-그리기",
    "title": "0722",
    "section": "countplot 이용해서 그래프 그리기",
    "text": "countplot 이용해서 그래프 그리기\n\nplt.clf()\nsns.countplot(data = mpg, x = 'drv', hue = 'drv')\nplt.show()"
  },
  {
    "objectID": "docs/0722.html#plotly를-사용한-산점도",
    "href": "docs/0722.html#plotly를-사용한-산점도",
    "title": "0722",
    "section": "plotly를 사용한 산점도",
    "text": "plotly를 사용한 산점도\n\nmpg\nimport plotly.express as px\npx.scatter(data_frame = mpg, x = 'cty', y = 'hwy', color = 'drv')"
  },
  {
    "objectID": "docs/posts/hw3/index.html#q1",
    "href": "docs/posts/hw3/index.html#q1",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "Q1",
    "text": "Q1\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/Doit_Python/Data/mpg.csv')\nsns.scatterplot(data = mpg, x = 'cty', y = 'hwy')\nplt.clf()\nplt.show()\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "docs/posts/hw3/index.html#q2",
    "href": "docs/posts/hw3/index.html#q2",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "Q2",
    "text": "Q2\n\nmidwest = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/midwest.csv')\nmidwest\nimport seaborn as sns\nplt.clf()\nmidwest['poptotal']\nmidwest['popasian']\nplt.clf()\nsns.scatterplot(data = midwest, x = 'poptotal', y = 'popasian') \\\n   .set(xlim = [0, 500000], ylim = [0, 10000])\nplt.show()"
  },
  {
    "objectID": "docs/posts/hw3/index.html#p.-211",
    "href": "docs/posts/hw3/index.html#p.-211",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "p. 211",
    "text": "p. 211"
  },
  {
    "objectID": "docs/posts/hw3/index.html#q1-1",
    "href": "docs/posts/hw3/index.html#q1-1",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "Q1",
    "text": "Q1\n\nmpg\nplt.clf()\ndf = mpg.query('category == \"suv\"') \\\n        .groupby('manufacturer', as_index = False) \\\n        .agg(mean_cty = ('cty', 'mean')) \\\n        .sort_values('mean_cty', ascending = False) \\\n        .head()\n\ndf\n\nimport seaborn as sns\nsns.barplot(data = df, x = 'manufacturer', y = 'mean_cty')\nplt.show()"
  },
  {
    "objectID": "docs/posts/hw3/index.html#q2-1",
    "href": "docs/posts/hw3/index.html#q2-1",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "Q2",
    "text": "Q2\n\ndf_mpg = mpg.groupby('category', as_index = False) \\\n            .agg(n = ('category', 'count')) \\\n            .sort_values('n', ascending = False)\ndf_mpg\n\nplt.clf()\nimport seaborn as sns\nsns.barplot(data= df_mpg, x = 'category', y = 'n')\n\n\n\n\n\n\n\n\n\n‘barplot()’ 사용하기"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#q1",
    "href": "docs/posts/hw3/hw3.html#q1",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "Q1",
    "text": "Q1\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/Doit_Python/Data/mpg.csv')\nsns.scatterplot(data = mpg, x = 'cty', y = 'hwy')\nplt.clf()\nplt.show()\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#q2",
    "href": "docs/posts/hw3/hw3.html#q2",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "Q2",
    "text": "Q2\n\nmidwest = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/midwest.csv')\nmidwest\nimport seaborn as sns\nplt.clf()\nmidwest['poptotal']\nmidwest['popasian']\nplt.clf()\nsns.scatterplot(data = midwest, x = 'poptotal', y = 'popasian') \\\n   .set(xlim = [0, 500000], ylim = [0, 10000])\nplt.show()"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#p.-211",
    "href": "docs/posts/hw3/hw3.html#p.-211",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "p. 211",
    "text": "p. 211"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#q1-1",
    "href": "docs/posts/hw3/hw3.html#q1-1",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "Q1",
    "text": "Q1\n\nmpg\nplt.clf()\ndf = mpg.query('category == \"suv\"') \\\n        .groupby('manufacturer', as_index = False) \\\n        .agg(mean_cty = ('cty', 'mean')) \\\n        .sort_values('mean_cty', ascending = False) \\\n        .head()\n\ndf\n\nimport seaborn as sns\nsns.barplot(data = df, x = 'manufacturer', y = 'mean_cty')\nplt.show()"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#q2-1",
    "href": "docs/posts/hw3/hw3.html#q2-1",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "Q2",
    "text": "Q2\n\ndf_mpg = mpg.groupby('category', as_index = False) \\\n            .agg(n = ('category', 'count')) \\\n            .sort_values('n', ascending = False)\ndf_mpg\n\nplt.clf()\nimport seaborn as sns\nsns.barplot(data= df_mpg, x = 'category', y = 'n')\n\n\n\n\n\n\n\n\n\n‘barplot()’ 사용하기"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#데이터-전처리하기",
    "href": "docs/posts/hw3/hw3.html#데이터-전처리하기",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "데이터 전처리하기",
    "text": "데이터 전처리하기\n\nimport pandas as pd\nmpg = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/mpg.csv')\nmpg\nmpg.shape\nimport seaborn as sns\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#산점도-그리기",
    "href": "docs/posts/hw3/hw3.html#산점도-그리기",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "산점도 그리기",
    "text": "산점도 그리기\n\nsns.scatterplot(data = mpg, x = 'displ', y = 'hwy',\n                            hue = 'drv') \\\n   .set(xlim = [3, 6], ylim = [10, 30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n##barplot 이용하여 그래프 만들기\n\ndf_mpg = mpg.groupby('drv', as_index = False) \\\n    .agg(mean_hwy=('hwy', 'mean')) # as_index = False -&gt; drv가 컬럼이 돼서 나온다\nsns.barplot(data = df_mpg.sort_values('mean_hwy'),\n            x = 'drv', y = 'mean_hwy',\n            hue = 'drv')\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#데이터-전처리하기-1",
    "href": "docs/posts/hw3/hw3.html#데이터-전처리하기-1",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "데이터 전처리하기",
    "text": "데이터 전처리하기\n\ndf_mpg = mpg.groupby('drv', as_index = False) \\\n            .agg(n = ('drv', 'count'))\ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nn\n\n\n\n\n0\n4\n103\n\n\n1\nf\n106\n\n\n2\nr\n25"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#barplot-사용해서-그래프-그리기",
    "href": "docs/posts/hw3/hw3.html#barplot-사용해서-그래프-그리기",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "barplot 사용해서 그래프 그리기",
    "text": "barplot 사용해서 그래프 그리기\n\nplt.clf()\nsns.barplot(data = df_mpg, x = 'drv', y = 'n', hue = 'drv')\nplt.show()"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#countplot-이용해서-그래프-그리기",
    "href": "docs/posts/hw3/hw3.html#countplot-이용해서-그래프-그리기",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "countplot 이용해서 그래프 그리기",
    "text": "countplot 이용해서 그래프 그리기\n\nplt.clf()\nsns.countplot(data = mpg, x = 'drv', hue = 'drv')\nplt.show()"
  },
  {
    "objectID": "docs/posts/hw3/hw3.html#plotly를-사용한-산점도",
    "href": "docs/posts/hw3/hw3.html#plotly를-사용한-산점도",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "plotly를 사용한 산점도",
    "text": "plotly를 사용한 산점도\n\nmpg\nmpg.info()\nimport plotly.express as px\npx.scatter(data_frame = mpg, x = 'cty', y = 'hwy', color = 'drv')\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 234 entries, 0 to 233\nData columns (total 11 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   manufacturer  234 non-null    object \n 1   model         234 non-null    object \n 2   displ         234 non-null    float64\n 3   year          234 non-null    int64  \n 4   cyl           234 non-null    int64  \n 5   trans         234 non-null    object \n 6   drv           234 non-null    object \n 7   cty           234 non-null    int64  \n 8   hwy           234 non-null    int64  \n 9   fl            234 non-null    object \n 10  class         234 non-null    object \ndtypes: float64(1), int64(4), object(6)\nmemory usage: 20.2+ KB\n\n\n                                                \n\n\n\ndf = mpg.groupby('class', as_index = False) \\\n        .agg(n = ('class', 'count'))\ndf\n\npx.bar(data_frame = df, x = 'class', y = 'n', color = 'class')"
  },
  {
    "objectID": "project1.html",
    "href": "project1.html",
    "title": "project1 - 기역조",
    "section": "",
    "text": "대한민국 연령별, 지역별 출생율 비교분석"
  },
  {
    "objectID": "project1.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "href": "project1.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "title": "project1 - 기역조",
    "section": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?",
    "text": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?\n20-22년도 데이터 추출\n\n전국 모의연령별 출산율 비교를 위한 iloc 활용\n기간: 2020~2022\n그룹: 청년 / 비청년\n\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2.info()\nbr2 = br2.iloc[:, 57:78] \n\n\nbr2\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 1 entries, 0 to 0\nData columns (total 92 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   시군구별       1 non-null      object \n 1   12_1519    1 non-null      float64\n 2   12_2024    1 non-null      float64\n 3   12_2529    1 non-null      float64\n 4   12_3034    1 non-null      float64\n 5   12_3539    1 non-null      float64\n 6   12_4044    1 non-null      float64\n 7   12_4549    1 non-null      float64\n 8   13_1519    1 non-null      float64\n 9   13_2024    1 non-null      float64\n 10  13_2529    1 non-null      float64\n 11  13_3034    1 non-null      float64\n 12  13_3539    1 non-null      float64\n 13  13_4044    1 non-null      float64\n 14  13_4549    1 non-null      float64\n 15  14_1519    1 non-null      float64\n 16  14_2024    1 non-null      float64\n 17  14_2529    1 non-null      float64\n 18  14_3034    1 non-null      float64\n 19  14_3539    1 non-null      float64\n 20  14_4044    1 non-null      float64\n 21  14_4549    1 non-null      float64\n 22  15_1519    1 non-null      float64\n 23  15_2024    1 non-null      float64\n 24  15_2529    1 non-null      float64\n 25  15_3034    1 non-null      float64\n 26  15_3539    1 non-null      float64\n 27  15_4044    1 non-null      float64\n 28  15_4549    1 non-null      float64\n 29  16_1519    1 non-null      float64\n 30  16_2024    1 non-null      float64\n 31  16_2529    1 non-null      float64\n 32  16_3034    1 non-null      float64\n 33  16_3539    1 non-null      float64\n 34  16_4044    1 non-null      float64\n 35  16_4549    1 non-null      float64\n 36  17_1519    1 non-null      float64\n 37  17_2024    1 non-null      float64\n 38  17_2529    1 non-null      float64\n 39  17_3034    1 non-null      float64\n 40  17_3539    1 non-null      float64\n 41  17_4044    1 non-null      float64\n 42  17_4549    1 non-null      float64\n 43  18_1519    1 non-null      float64\n 44  18_2024    1 non-null      float64\n 45  18_2529    1 non-null      float64\n 46  18_3034    1 non-null      float64\n 47  18_3539    1 non-null      float64\n 48  18_4044    1 non-null      float64\n 49  18_4549    1 non-null      float64\n 50  19_1519    1 non-null      float64\n 51  19_2024    1 non-null      float64\n 52  19_2529    1 non-null      float64\n 53  19_3034    1 non-null      float64\n 54  19_3539    1 non-null      float64\n 55  19_4044    1 non-null      float64\n 56  19_4549    1 non-null      float64\n 57  20_1519    1 non-null      float64\n 58  20_2024    1 non-null      float64\n 59  20_2529    1 non-null      float64\n 60  20_3034    1 non-null      float64\n 61  20_3539    1 non-null      float64\n 62  20_4044    1 non-null      float64\n 63  20_4549    1 non-null      float64\n 64  21_1519    1 non-null      float64\n 65  21_2024    1 non-null      float64\n 66  21_2529    1 non-null      float64\n 67  21_3034    1 non-null      float64\n 68  21_3539    1 non-null      float64\n 69  21_4044    1 non-null      float64\n 70  21_4549    1 non-null      float64\n 71  22_1519    1 non-null      float64\n 72  22_2024    1 non-null      float64\n 73  22_2529    1 non-null      float64\n 74  22_3034    1 non-null      float64\n 75  22_3539    1 non-null      float64\n 76  22_4044    1 non-null      float64\n 77  22_4549    1 non-null      float64\n 78  mean20     1 non-null      float64\n 79  mean21     1 non-null      float64\n 80  mean22     1 non-null      float64\n 81  compare12  1 non-null      object \n 82  compare13  1 non-null      object \n 83  compare14  1 non-null      object \n 84  compare15  1 non-null      object \n 85  compare16  1 non-null      object \n 86  compare17  1 non-null      object \n 87  compare18  1 non-null      object \n 88  compare19  1 non-null      object \n 89  compare20  1 non-null      object \n 90  compare21  1 non-null      object \n 91  compare22  1 non-null      object \ndtypes: float64(80), object(12)\nmemory usage: 852.0+ bytes\n\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n\n0 -&gt; birth_rate(모의연령별 출산율)\n비어있는열 -&gt; year\n\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\n\nnp.where함수로 청년층과 비청년층 구분\n\n청년층: 1, 비청년층: 2 할당\n\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n\n청년, 비청년 출산율비교\n20~22년 청년 비청년 모의 출산율\n청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br2_youth_rate)\nprint('비청년: ', br2_non_youth_rate)\n\n청년:  36.21111111111111\n비청년:  12.891666666666666\n\n\n12~14년 청년 비청년 모의 출산율\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\n\nbr3 = br3.transpose()\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), 1, 2)\n\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br3_youth_rate)\nprint('비청년: ', br3_non_youth_rate)\n\n청년:  66.32222222222222\n비청년:  12.909090909090908\n\n\n그래프 표현\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolors = ['orchid', 'lightpink', 'palevioletred', 'hotpink', 'plum', 'thistle']\n\nsns.barplot(x=['12_14Youth', '20_22Youth','12_14Non-Youth', '20_22Non-Youth'], y=[br3_youth_rate,br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate], palette=colors)\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_24056\\2817311611.py:5: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_24056\\2817311611.py:5: UserWarning:\n\nThe palette list has more values (6) than needed (4), which may not be intended."
  },
  {
    "objectID": "project1.html#결과",
    "href": "project1.html#결과",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n- 과거대비 청년층의 출산율 감소\n- 비청년층 출산율 변화 없음"
  },
  {
    "objectID": "project1.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "href": "project1.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "title": "project1 - 기역조",
    "section": "Q 전국 평균 대비 시도별 청년층의 출산율 비교",
    "text": "Q 전국 평균 대비 시도별 청년층의 출산율 비교\n청년층의 출산율이 높은 지역 상위5 & 하위5\n\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head(), \"\\n\", \"--------------------------\")\n\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\").head())\n\n       시군구별     mean20\n8   세종특별자치시  64.233333\n14     전라남도  56.266667\n12     충청남도  52.100000\n10      강원도  51.300000\n7     울산광역시  49.700000 \n -------------------------\n       시군구별     mean21\n8   세종특별자치시  63.000000\n14     전라남도  49.333333\n10      강원도  47.566667\n12     충청남도  47.533333\n15     경상북도  46.733333 \n -------------------------\n       시군구별     mean22\n8   세종특별자치시  53.066667\n10      강원도  46.033333\n14     전라남도  45.600000\n15     경상북도  44.500000\n12     충청남도  44.400000 \n --------------------------\n    시군구별     mean20\n1  서울특별시  25.700000\n2  부산광역시  33.933333\n5  광주광역시  37.233333\n6  대전광역시  37.366667\n4  인천광역시  38.033333 \n --------------------------\n    시군구별     mean21\n1  서울특별시  23.833333\n2  부산광역시  31.633333\n4  인천광역시  34.600000\n3  대구광역시  35.466667\n0     전국  36.200000 \n --------------------------\n    시군구별     mean22\n1  서울특별시  21.600000\n2  부산광역시  30.900000\n4  인천광역시  32.233333\n0     전국  33.866667\n3  대구광역시  34.100000\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nnew = br[['시군구별', 'mean20']].sort_values(\"mean20\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean20', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2020', fontsize=12)\nplt.title('Mean Birth Rate  2020년도 시군구별 ', fontsize=15)\nplt.show()\n\nplt.clf()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_24056\\4059357404.py:5: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_24056\\4059357404.py:5: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans.\n\n\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nnew = br[['시군구별', 'mean21']].sort_values(\"mean21\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean21', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2021', fontsize=12)\nplt.title('Mean Birth Rate  2021년도 시군구별 ', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_24056\\2780248488.py:3: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_24056\\2780248488.py:3: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans.\n\n\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean22']].sort_values(\"mean22\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean22', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2022', fontsize=12)\nplt.title('Mean Birth Rate  2022년도 시군구별 ', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_24056\\1985628693.py:3: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_24056\\1985628693.py:3: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans."
  },
  {
    "objectID": "project1.html#결과-1",
    "href": "project1.html#결과-1",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n\n가장 높은 출산율을 보여주는 도시 = 세종특별자치시\n가장 낮은 출산율을 보여주는 도시 = 서울특별시"
  },
  {
    "objectID": "posts/project1/project1.html",
    "href": "posts/project1/project1.html",
    "title": "project1 - 기역조",
    "section": "",
    "text": "대한민국 연령별, 지역별 출생율 비교분석"
  },
  {
    "objectID": "posts/project1/project1.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "href": "posts/project1/project1.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "title": "project1 - 기역조",
    "section": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?",
    "text": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?\n20-22년도 데이터 추출\n\n전국 모의연령별 출산율 비교를 위한 iloc 활용\n기간: 2020~2022\n그룹: 청년 / 비청년\n\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2 = br2.iloc[:, 57:78] \nbr2\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n\n0 -&gt; birth_rate(모의연령별 출산율)\n비어있는열 -&gt; year\n\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\n\n\n\n\n0\n20_1519\n0.7\n\n\n1\n20_2024\n6.2\n\n\n2\n20_2529\n30.6\n\n\n3\n20_3034\n78.9\n\n\n4\n20_3539\n42.3\n\n\n5\n20_4044\n7.1\n\n\n6\n20_4549\n0.2\n\n\n7\n21_1519\n0.4\n\n\n8\n21_2024\n5.0\n\n\n9\n21_2529\n27.5\n\n\n10\n21_3034\n76.1\n\n\n11\n21_3539\n43.5\n\n\n12\n21_4044\n7.6\n\n\n13\n21_4549\n0.2\n\n\n14\n22_1519\n0.4\n\n\n15\n22_2024\n4.1\n\n\n16\n22_2529\n24.0\n\n\n17\n22_3034\n73.5\n\n\n18\n22_3539\n44.1\n\n\n19\n22_4044\n8.0\n\n\n20\n22_4549\n0.2\n\n\n\n\n\n\n\nnp.where함수로 청년층과 비청년층 구분\n\n청년층: 1, 비청년층: 2 할당\n\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n\n청년, 비청년 출산율비교\n20~22년 청년 비청년 모의 출산율\n청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br2_youth_rate)\nprint('비청년: ', br2_non_youth_rate)\n\n청년:  36.21111111111111\n비청년:  12.891666666666666\n\n\n12~14년 청년 비청년 모의 출산율\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\n\nbr3 = br3.transpose()\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), 1, 2)\n\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br3_youth_rate)\nprint('비청년: ', br3_non_youth_rate)\n\n청년:  66.32222222222222\n비청년:  12.909090909090908\n\n\n그래프 표현\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndata = pd.DataFrame({\n    'Age Group': ['12_14Youth', '20_22Youth', '12_14Non-Youth', '20_22Non-Youth'],\n    'Mean Birth Rate': [br3_youth_rate, br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate],\n    'Youth': ['Youth', 'Youth', 'Non-Youth', 'Non-Youth']\n})\n\nsns.barplot(x='Age Group', y='Mean Birth Rate', hue='Youth', data=data)\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/project1/project1.html#결과",
    "href": "posts/project1/project1.html#결과",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n- 과거대비 청년층의 출산율 감소\n- 비청년층 출산율 변화 없음"
  },
  {
    "objectID": "posts/project1/project1.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "href": "posts/project1/project1.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "title": "project1 - 기역조",
    "section": "Q 전국 평균 대비 시도별 청년층의 출산율 비교",
    "text": "Q 전국 평균 대비 시도별 청년층의 출산율 비교\n청년층의 출산율이 높은 지역 상위5 & 하위5\n\nprint('상위' + '\\n')\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head(), \"\\n\", \"--------------------------\")\n\nprint('하위' + '\\n')\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\").head())\n\n상위\n\n       시군구별     mean20\n8   세종특별자치시  64.233333\n14     전라남도  56.266667\n12     충청남도  52.100000\n10      강원도  51.300000\n7     울산광역시  49.700000 \n -------------------------\n       시군구별     mean21\n8   세종특별자치시  63.000000\n14     전라남도  49.333333\n10      강원도  47.566667\n12     충청남도  47.533333\n15     경상북도  46.733333 \n -------------------------\n       시군구별     mean22\n8   세종특별자치시  53.066667\n10      강원도  46.033333\n14     전라남도  45.600000\n15     경상북도  44.500000\n12     충청남도  44.400000 \n --------------------------\n하위\n\n    시군구별     mean20\n1  서울특별시  25.700000\n2  부산광역시  33.933333\n5  광주광역시  37.233333\n6  대전광역시  37.366667\n4  인천광역시  38.033333 \n --------------------------\n    시군구별     mean21\n1  서울특별시  23.833333\n2  부산광역시  31.633333\n4  인천광역시  34.600000\n3  대구광역시  35.466667\n0     전국  36.200000 \n --------------------------\n    시군구별     mean22\n1  서울특별시  21.600000\n2  부산광역시  30.900000\n4  인천광역시  32.233333\n0     전국  33.866667\n3  대구광역시  34.100000\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport seaborn as sns\nplt.rcParams.update({'font.family' : 'Malgun Gothic'})\nnew = br[['시군구별', 'mean20']].sort_values(\"mean20\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean20')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2020', fontsize=12)\nplt.title('Mean Birth Rate  2020년도 시군구별 ', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean21']].sort_values(\"mean21\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean21')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2021', fontsize=12)\nplt.title('Mean Birth Rate  2021년도 시군구별 ', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean22']].sort_values(\"mean22\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean22')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2022', fontsize=12)\nplt.title('Mean Birth Rate  2022년도 시군구별 ', fontsize=15)\nplt.show()"
  },
  {
    "objectID": "posts/project1/project1.html#결과-1",
    "href": "posts/project1/project1.html#결과-1",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n\n가장 높은 출산율을 보여주는 도시 = 세종특별자치시\n가장 낮은 출산율을 보여주는 도시 = 서울특별시"
  },
  {
    "objectID": "posts/project1/CopyOffinala-group.html",
    "href": "posts/project1/CopyOffinala-group.html",
    "title": "project1 - 기역조",
    "section": "",
    "text": "대한민국 연령별, 지역별 출생율 비교분석"
  },
  {
    "objectID": "posts/project1/CopyOffinala-group.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "href": "posts/project1/CopyOffinala-group.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "title": "project1 - 기역조",
    "section": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?",
    "text": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?\n20-22년도 데이터 추출\n\n전국 모의연령별 출산율 비교를 위한 iloc 활용\n기간: 2020~2022\n그룹: 청년 / 비청년\n\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2.info()\nbr2 = br2.iloc[:, 57:78] \n\n\nbr2\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 1 entries, 0 to 0\nData columns (total 81 columns):\n #   Column   Non-Null Count  Dtype  \n---  ------   --------------  -----  \n 0   시군구별     1 non-null      object \n 1   12_1519  1 non-null      float64\n 2   12_2024  1 non-null      float64\n 3   12_2529  1 non-null      float64\n 4   12_3034  1 non-null      float64\n 5   12_3539  1 non-null      float64\n 6   12_4044  1 non-null      float64\n 7   12_4549  1 non-null      float64\n 8   13_1519  1 non-null      float64\n 9   13_2024  1 non-null      float64\n 10  13_2529  1 non-null      float64\n 11  13_3034  1 non-null      float64\n 12  13_3539  1 non-null      float64\n 13  13_4044  1 non-null      float64\n 14  13_4549  1 non-null      float64\n 15  14_1519  1 non-null      float64\n 16  14_2024  1 non-null      float64\n 17  14_2529  1 non-null      float64\n 18  14_3034  1 non-null      float64\n 19  14_3539  1 non-null      float64\n 20  14_4044  1 non-null      float64\n 21  14_4549  1 non-null      float64\n 22  15_1519  1 non-null      float64\n 23  15_2024  1 non-null      float64\n 24  15_2529  1 non-null      float64\n 25  15_3034  1 non-null      float64\n 26  15_3539  1 non-null      float64\n 27  15_4044  1 non-null      float64\n 28  15_4549  1 non-null      float64\n 29  16_1519  1 non-null      float64\n 30  16_2024  1 non-null      float64\n 31  16_2529  1 non-null      float64\n 32  16_3034  1 non-null      float64\n 33  16_3539  1 non-null      float64\n 34  16_4044  1 non-null      float64\n 35  16_4549  1 non-null      float64\n 36  17_1519  1 non-null      float64\n 37  17_2024  1 non-null      float64\n 38  17_2529  1 non-null      float64\n 39  17_3034  1 non-null      float64\n 40  17_3539  1 non-null      float64\n 41  17_4044  1 non-null      float64\n 42  17_4549  1 non-null      float64\n 43  18_1519  1 non-null      float64\n 44  18_2024  1 non-null      float64\n 45  18_2529  1 non-null      float64\n 46  18_3034  1 non-null      float64\n 47  18_3539  1 non-null      float64\n 48  18_4044  1 non-null      float64\n 49  18_4549  1 non-null      float64\n 50  19_1519  1 non-null      float64\n 51  19_2024  1 non-null      float64\n 52  19_2529  1 non-null      float64\n 53  19_3034  1 non-null      float64\n 54  19_3539  1 non-null      float64\n 55  19_4044  1 non-null      float64\n 56  19_4549  1 non-null      float64\n 57  20_1519  1 non-null      float64\n 58  20_2024  1 non-null      float64\n 59  20_2529  1 non-null      float64\n 60  20_3034  1 non-null      float64\n 61  20_3539  1 non-null      float64\n 62  20_4044  1 non-null      float64\n 63  20_4549  1 non-null      float64\n 64  21_1519  1 non-null      float64\n 65  21_2024  1 non-null      float64\n 66  21_2529  1 non-null      float64\n 67  21_3034  1 non-null      float64\n 68  21_3539  1 non-null      float64\n 69  21_4044  1 non-null      float64\n 70  21_4549  1 non-null      float64\n 71  22_1519  1 non-null      float64\n 72  22_2024  1 non-null      float64\n 73  22_2529  1 non-null      float64\n 74  22_3034  1 non-null      float64\n 75  22_3539  1 non-null      float64\n 76  22_4044  1 non-null      float64\n 77  22_4549  1 non-null      float64\n 78  mean20   1 non-null      float64\n 79  mean21   1 non-null      float64\n 80  mean22   1 non-null      float64\ndtypes: float64(80), object(1)\nmemory usage: 764.0+ bytes\n\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n\n0 -&gt; birth_rate(모의연령별 출산율)\n비어있는열 -&gt; year\n\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\n\n\n\n\n0\n20_1519\n0.7\n\n\n1\n20_2024\n6.2\n\n\n2\n20_2529\n30.6\n\n\n3\n20_3034\n78.9\n\n\n4\n20_3539\n42.3\n\n\n5\n20_4044\n7.1\n\n\n6\n20_4549\n0.2\n\n\n7\n21_1519\n0.4\n\n\n8\n21_2024\n5.0\n\n\n9\n21_2529\n27.5\n\n\n10\n21_3034\n76.1\n\n\n11\n21_3539\n43.5\n\n\n12\n21_4044\n7.6\n\n\n13\n21_4549\n0.2\n\n\n14\n22_1519\n0.4\n\n\n15\n22_2024\n4.1\n\n\n16\n22_2529\n24.0\n\n\n17\n22_3034\n73.5\n\n\n18\n22_3539\n44.1\n\n\n19\n22_4044\n8.0\n\n\n20\n22_4549\n0.2\n\n\n\n\n\n\n\nnp.where함수로 청년층과 비청년층 구분\n\n청년층: 1, 비청년층: 2 할당\n\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n\n청년, 비청년 출산율비교\n20~22년 청년 비청년 모의 출산율\n청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br2_youth_rate)\nprint('비청년: ', br2_non_youth_rate)\n\n청년:  36.21111111111111\n비청년:  12.891666666666666\n\n\n12~14년 청년 비청년 모의 출산율\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\n\nbr3 = br3.transpose()\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), 1, 2)\n\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br3_youth_rate)\nprint('비청년: ', br3_non_youth_rate)\n\n청년:  66.32222222222222\n비청년:  12.909090909090908\n\n\n그래프 표현\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndata = pd.DataFrame({\n    'Age Group': ['12_14Youth', '20_22Youth', '12_14Non-Youth', '20_22Non-Youth'],\n    'Mean Birth Rate': [br3_youth_rate, br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate],\n    'Youth': ['Youth', 'Youth', 'Non-Youth', 'Non-Youth']\n})\n\nsns.barplot(x='Age Group', y='Mean Birth Rate', hue='Youth', data=data)\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/project1/CopyOffinala-group.html#결과",
    "href": "posts/project1/CopyOffinala-group.html#결과",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n- 과거대비 청년층의 출산율 감소\n- 비청년층 출산율 변화 없음"
  },
  {
    "objectID": "posts/project1/CopyOffinala-group.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "href": "posts/project1/CopyOffinala-group.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "title": "project1 - 기역조",
    "section": "Q 전국 평균 대비 시도별 청년층의 출산율 비교",
    "text": "Q 전국 평균 대비 시도별 청년층의 출산율 비교\n청년층의 출산율이 높은 지역 상위5 & 하위5\n\nprint('상위' + '\\n')\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head(), \"\\n\", \"--------------------------\")\n\nprint('하위' + '\\n')\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\").head())\n\n상위\n\n       시군구별     mean20\n8   세종특별자치시  64.233333\n14     전라남도  56.266667\n12     충청남도  52.100000\n10      강원도  51.300000\n7     울산광역시  49.700000 \n -------------------------\n       시군구별     mean21\n8   세종특별자치시  63.000000\n14     전라남도  49.333333\n10      강원도  47.566667\n12     충청남도  47.533333\n15     경상북도  46.733333 \n -------------------------\n       시군구별     mean22\n8   세종특별자치시  53.066667\n10      강원도  46.033333\n14     전라남도  45.600000\n15     경상북도  44.500000\n12     충청남도  44.400000 \n --------------------------\n하위\n\n    시군구별     mean20\n1  서울특별시  25.700000\n2  부산광역시  33.933333\n5  광주광역시  37.233333\n6  대전광역시  37.366667\n4  인천광역시  38.033333 \n --------------------------\n    시군구별     mean21\n1  서울특별시  23.833333\n2  부산광역시  31.633333\n4  인천광역시  34.600000\n3  대구광역시  35.466667\n0     전국  36.200000 \n --------------------------\n    시군구별     mean22\n1  서울특별시  21.600000\n2  부산광역시  30.900000\n4  인천광역시  32.233333\n0     전국  33.866667\n3  대구광역시  34.100000\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport seaborn as sns\nplt.rcParams.update({'font.family' : 'Malgun Gothic'})\nnew = br[['시군구별', 'mean20']].sort_values(\"mean20\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean20')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2020', fontsize=12)\nplt.title('Mean Birth Rate  2020년도 시군구별 ', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean21']].sort_values(\"mean21\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean21')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2021', fontsize=12)\nplt.title('Mean Birth Rate  2021년도 시군구별 ', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean22']].sort_values(\"mean22\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean22')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2022', fontsize=12)\nplt.title('Mean Birth Rate  2022년도 시군구별 ', fontsize=15)\nplt.show()"
  },
  {
    "objectID": "posts/project1/CopyOffinala-group.html#결과-1",
    "href": "posts/project1/CopyOffinala-group.html#결과-1",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n\n가장 높은 출산율을 보여주는 도시 = 세종특별자치시\n가장 낮은 출산율을 보여주는 도시 = 서울특별시"
  },
  {
    "objectID": "posts/project1/finala-group.html",
    "href": "posts/project1/finala-group.html",
    "title": "project1 - 기역조",
    "section": "",
    "text": "대한민국 연령별, 지역별 출생율 비교분석"
  },
  {
    "objectID": "posts/project1/finala-group.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "href": "posts/project1/finala-group.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "title": "project1 - 기역조",
    "section": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?",
    "text": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?\n20-22년도 데이터 추출\n\n전국 모의연령별 출산율 비교를 위한 iloc 활용\n기간: 2020~2022\n그룹: 청년 / 비청년\n\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2.info()\nbr2 = br2.iloc[:, 57:78] \n\n\nbr2\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 1 entries, 0 to 0\nData columns (total 81 columns):\n #   Column   Non-Null Count  Dtype  \n---  ------   --------------  -----  \n 0   시군구별     1 non-null      object \n 1   12_1519  1 non-null      float64\n 2   12_2024  1 non-null      float64\n 3   12_2529  1 non-null      float64\n 4   12_3034  1 non-null      float64\n 5   12_3539  1 non-null      float64\n 6   12_4044  1 non-null      float64\n 7   12_4549  1 non-null      float64\n 8   13_1519  1 non-null      float64\n 9   13_2024  1 non-null      float64\n 10  13_2529  1 non-null      float64\n 11  13_3034  1 non-null      float64\n 12  13_3539  1 non-null      float64\n 13  13_4044  1 non-null      float64\n 14  13_4549  1 non-null      float64\n 15  14_1519  1 non-null      float64\n 16  14_2024  1 non-null      float64\n 17  14_2529  1 non-null      float64\n 18  14_3034  1 non-null      float64\n 19  14_3539  1 non-null      float64\n 20  14_4044  1 non-null      float64\n 21  14_4549  1 non-null      float64\n 22  15_1519  1 non-null      float64\n 23  15_2024  1 non-null      float64\n 24  15_2529  1 non-null      float64\n 25  15_3034  1 non-null      float64\n 26  15_3539  1 non-null      float64\n 27  15_4044  1 non-null      float64\n 28  15_4549  1 non-null      float64\n 29  16_1519  1 non-null      float64\n 30  16_2024  1 non-null      float64\n 31  16_2529  1 non-null      float64\n 32  16_3034  1 non-null      float64\n 33  16_3539  1 non-null      float64\n 34  16_4044  1 non-null      float64\n 35  16_4549  1 non-null      float64\n 36  17_1519  1 non-null      float64\n 37  17_2024  1 non-null      float64\n 38  17_2529  1 non-null      float64\n 39  17_3034  1 non-null      float64\n 40  17_3539  1 non-null      float64\n 41  17_4044  1 non-null      float64\n 42  17_4549  1 non-null      float64\n 43  18_1519  1 non-null      float64\n 44  18_2024  1 non-null      float64\n 45  18_2529  1 non-null      float64\n 46  18_3034  1 non-null      float64\n 47  18_3539  1 non-null      float64\n 48  18_4044  1 non-null      float64\n 49  18_4549  1 non-null      float64\n 50  19_1519  1 non-null      float64\n 51  19_2024  1 non-null      float64\n 52  19_2529  1 non-null      float64\n 53  19_3034  1 non-null      float64\n 54  19_3539  1 non-null      float64\n 55  19_4044  1 non-null      float64\n 56  19_4549  1 non-null      float64\n 57  20_1519  1 non-null      float64\n 58  20_2024  1 non-null      float64\n 59  20_2529  1 non-null      float64\n 60  20_3034  1 non-null      float64\n 61  20_3539  1 non-null      float64\n 62  20_4044  1 non-null      float64\n 63  20_4549  1 non-null      float64\n 64  21_1519  1 non-null      float64\n 65  21_2024  1 non-null      float64\n 66  21_2529  1 non-null      float64\n 67  21_3034  1 non-null      float64\n 68  21_3539  1 non-null      float64\n 69  21_4044  1 non-null      float64\n 70  21_4549  1 non-null      float64\n 71  22_1519  1 non-null      float64\n 72  22_2024  1 non-null      float64\n 73  22_2529  1 non-null      float64\n 74  22_3034  1 non-null      float64\n 75  22_3539  1 non-null      float64\n 76  22_4044  1 non-null      float64\n 77  22_4549  1 non-null      float64\n 78  mean20   1 non-null      float64\n 79  mean21   1 non-null      float64\n 80  mean22   1 non-null      float64\ndtypes: float64(80), object(1)\nmemory usage: 764.0+ bytes\n\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n\n0 -&gt; birth_rate(모의연령별 출산율)\n비어있는열 -&gt; year\n\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\n\n\n\n\n0\n20_1519\n0.7\n\n\n1\n20_2024\n6.2\n\n\n2\n20_2529\n30.6\n\n\n3\n20_3034\n78.9\n\n\n4\n20_3539\n42.3\n\n\n5\n20_4044\n7.1\n\n\n6\n20_4549\n0.2\n\n\n7\n21_1519\n0.4\n\n\n8\n21_2024\n5.0\n\n\n9\n21_2529\n27.5\n\n\n10\n21_3034\n76.1\n\n\n11\n21_3539\n43.5\n\n\n12\n21_4044\n7.6\n\n\n13\n21_4549\n0.2\n\n\n14\n22_1519\n0.4\n\n\n15\n22_2024\n4.1\n\n\n16\n22_2529\n24.0\n\n\n17\n22_3034\n73.5\n\n\n18\n22_3539\n44.1\n\n\n19\n22_4044\n8.0\n\n\n20\n22_4549\n0.2\n\n\n\n\n\n\n\nnp.where함수로 청년층과 비청년층 구분\n\n청년층: 1, 비청년층: 2 할당\n\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n\n청년, 비청년 출산율비교\n20~22년 청년 비청년 모의 출산율\n청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br2_youth_rate)\nprint('비청년: ', br2_non_youth_rate)\n\n청년:  36.21111111111111\n비청년:  12.891666666666666\n\n\n12~14년 청년 비청년 모의 출산율\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\n\nbr3 = br3.transpose()\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), 1, 2)\n\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br3_youth_rate)\nprint('비청년: ', br3_non_youth_rate)\n\n청년:  66.32222222222222\n비청년:  12.909090909090908\n\n\n그래프 표현\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndata = pd.DataFrame({\n    'Age Group': ['12_14Youth', '20_22Youth', '12_14Non-Youth', '20_22Non-Youth'],\n    'Mean Birth Rate': [br3_youth_rate, br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate],\n    'Youth': ['Youth', 'Youth', 'Non-Youth', 'Non-Youth']\n})\n\nsns.barplot(x='Age Group', y='Mean Birth Rate', hue='Youth', data=data)\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/project1/finala-group.html#결과",
    "href": "posts/project1/finala-group.html#결과",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n- 과거대비 청년층의 출산율 감소\n- 비청년층 출산율 변화 없음"
  },
  {
    "objectID": "posts/project1/finala-group.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "href": "posts/project1/finala-group.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "title": "project1 - 기역조",
    "section": "Q 전국 평균 대비 시도별 청년층의 출산율 비교",
    "text": "Q 전국 평균 대비 시도별 청년층의 출산율 비교\n청년층의 출산율이 높은 지역 상위5 & 하위5\n\nprint('상위' + '\\n')\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head(), \"\\n\", \"--------------------------\")\n\nprint('하위' + '\\n')\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\").head())\n\n상위\n\n       시군구별     mean20\n8   세종특별자치시  64.233333\n14     전라남도  56.266667\n12     충청남도  52.100000\n10      강원도  51.300000\n7     울산광역시  49.700000 \n -------------------------\n       시군구별     mean21\n8   세종특별자치시  63.000000\n14     전라남도  49.333333\n10      강원도  47.566667\n12     충청남도  47.533333\n15     경상북도  46.733333 \n -------------------------\n       시군구별     mean22\n8   세종특별자치시  53.066667\n10      강원도  46.033333\n14     전라남도  45.600000\n15     경상북도  44.500000\n12     충청남도  44.400000 \n --------------------------\n하위\n\n    시군구별     mean20\n1  서울특별시  25.700000\n2  부산광역시  33.933333\n5  광주광역시  37.233333\n6  대전광역시  37.366667\n4  인천광역시  38.033333 \n --------------------------\n    시군구별     mean21\n1  서울특별시  23.833333\n2  부산광역시  31.633333\n4  인천광역시  34.600000\n3  대구광역시  35.466667\n0     전국  36.200000 \n --------------------------\n    시군구별     mean22\n1  서울특별시  21.600000\n2  부산광역시  30.900000\n4  인천광역시  32.233333\n0     전국  33.866667\n3  대구광역시  34.100000\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport seaborn as sns\nplt.rcParams.update({'font.family' : 'Malgun Gothic'})\nnew = br[['시군구별', 'mean20']].sort_values(\"mean20\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean20')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2020', fontsize=12)\nplt.title('Mean Birth Rate  2020년도 시군구별 ', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean21']].sort_values(\"mean21\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean21')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2021', fontsize=12)\nplt.title('Mean Birth Rate  2021년도 시군구별 ', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean22']].sort_values(\"mean22\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean22')\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2022', fontsize=12)\nplt.title('Mean Birth Rate  2022년도 시군구별 ', fontsize=15)\nplt.show()"
  },
  {
    "objectID": "posts/project1/finala-group.html#결과-1",
    "href": "posts/project1/finala-group.html#결과-1",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n\n가장 높은 출산율을 보여주는 도시 = 세종특별자치시\n가장 낮은 출산율을 보여주는 도시 = 서울특별시"
  }
]